name: TiGL Github CI

on: 
 schedule:
    - cron: "0 0 * * *"
 push:
 pull_request:

jobs:
    
  build:

    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest,windows-latest]
        python: ['=3.6',]
        tixi3: ['>=3.0.3',]
        qt: ['=5.9.7',]
        pythonocc: ['=0.17.3',]
        doxygen: ['>=1.8.0',]
        swig: ['>=3.0.11',]
        oce: ['=0.17.2',]
        ninja: ['',]
        freeimageplus: ['',]

    runs-on: ${{ matrix.os }}

    env:
      CCACHE_DIR: $(Pipeline.Workspace)/ccache
      CLCACHE_DIR: $(Pipeline.Workspace)\clcache
      CLCACHE_SERVER: 1
      CLCACHE_HARDLINK: 1
      CMAKE_TIGL_ARGS: "-DCMAKE_BUILD_TYPE=Release -DOCE_STATIC_LIBS=ON -DTIGL_BUILD_TESTS=ON -DTIGL_CONCAT_GENERATED_FILES=ON -DTIGL_BINDINGS_PYTHON_INTERNAL=ON -DTIGL_BINDINGS_MATLAB=ON -DTIGL_BINDINGS_JAVA=ON"

    steps:
    - uses: actions/checkout@v1

    - name: Install dependencies into Miniconda environment
      run: |
        conda update -q conda
        conda create --yes --name build_env python${{ parameters.python }} pythonocc-core${{ parameters.pythonocc }} tixi3${{ parameters.tixi3 }} doxygen${{ parameters.doxygen }} swig${{ parameters.swig }} qt${{ parameters.qt }} oce${{ parameters.oce }} doxygen${{ parameters.doxygen }} freeimageplus${{ parameters.freeimageplus }} ninja${{ parameters.ninja }} -c dlr-sc -c dlr-sc/label/tigl-dev
        conda info -a
        conda list -n build_env
    
    - name: Activate conda environment and setup build environment
      run: |
        source activate build_env
        export CMAKE_PREFIX_PATH=${CONDA_PREFIX}/lib:${CONDA_PREFIX}/include
      if: contains(matrix.os, 'ubuntu') or contains(matrix.os, 'macos')
    - name: Activate conda environment and setup build environment
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        call activate build_env
        set CC=clcache.exe
        set CXX=clcache.exe
        clcache.exe -s
        powershell.exe -Command "Start-Process clcache-server"
        set CMAKE_PREFIX_PATH=%CONDA_PREFIX%/lib:%CONDA_PREFIX%/include
      if: contains(matrix.os, 'windows')
        
    - name: Install ccache
      run: |
        sudo apt-get install ccache -y
        set PATH=/usr/lib/ccache:$PATH
      if: contains(matrix.os, 'ubuntu')
    - name: Install ccache
      run: |
        brew install zstd libb2
        brew install --HEAD ccache
        set PATH=/usr/local/opt/ccache/libexec:$PATH
      if: contains(matrix.os, 'macos')
    - name: Install clcache
      run: |
        call activate build_env
        pip install git+https://github.com/frerich/clcache.git
      if: contains(matrix.os, 'windows')
    
    - name: Build TiGL
      run: |
        mkdir build
        cd build
        cmake .. -G "Ninja" -DCMAKE_INSTALL_PREFIX=install $(CMAKE_TIGL_ARGS)
        cmake --build . -j 4 --config Release --target install
  
        
