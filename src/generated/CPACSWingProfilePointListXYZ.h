// Copyright (c) 2018 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#include <CCPACSPointListXYZVector.h>
#include <CCPACSStringVector.h>
#include <string>
#include <tixi.h>
#include "tigl_internal.h"

namespace tigl
{
namespace generated
{
    // This class is used in:
    // CPACSProfileGeometry

    // generated from /xsd:schema/xsd:complexType[722]
    class CPACSWingProfilePointListXYZ : public CCPACSPointListXYZVector
    {
    public:
        TIGL_EXPORT CPACSWingProfilePointListXYZ();
        TIGL_EXPORT virtual ~CPACSWingProfilePointListXYZ();

        TIGL_EXPORT virtual void ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath);
        TIGL_EXPORT virtual void WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const;

        TIGL_EXPORT virtual const CCPACSStringVector& GetKinks() const;
        TIGL_EXPORT virtual CCPACSStringVector& GetKinks();

        TIGL_EXPORT virtual const CCPACSStringVector& GetParameter_map() const;
        TIGL_EXPORT virtual CCPACSStringVector& GetParameter_map();

    protected:
        CCPACSStringVector m_kinks;
        CCPACSStringVector m_parameter_map;

    private:
        CPACSWingProfilePointListXYZ(const CPACSWingProfilePointListXYZ&) = delete;
        CPACSWingProfilePointListXYZ& operator=(const CPACSWingProfilePointListXYZ&) = delete;

        CPACSWingProfilePointListXYZ(CPACSWingProfilePointListXYZ&&) = delete;
        CPACSWingProfilePointListXYZ& operator=(CPACSWingProfilePointListXYZ&&) = delete;
    };
} // namespace generated

// Aliases in tigl namespace
using CCPACSWingProfilePointListXYZ = generated::CPACSWingProfilePointListXYZ;
} // namespace tigl
