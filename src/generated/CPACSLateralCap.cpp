// Copyright (c) 2018 RISC Software GmbH
//
// This file was generated by CPACSGen from CPACS XML Schema (c) German Aerospace Center (DLR/SC).
// Do not edit, all changes are lost when files are re-generated.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "CPACSLateralCap.h"
#include "CTiglError.h"
#include "CTiglLogging.h"
#include "TixiHelper.h"

namespace tigl
{
namespace generated
{
    CPACSLateralCap::CPACSLateralCap()
    {
    }

    CPACSLateralCap::~CPACSLateralCap()
    {
    }

    void CPACSLateralCap::ReadCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath)
    {
        // read base
        CPACSCap::ReadCPACS(tixiHandle, xpath);

        // read element placement
        if (tixi::TixiCheckElement(tixiHandle, xpath + "/placement")) {
            m_placement = stringToCPACSLateralCap_placement(tixi::TixiGetElement<std::string>(tixiHandle, xpath + "/placement"));
        }
        else {
            LOG(ERROR) << "Required element placement is missing at xpath " << xpath;
        }

    }

    void CPACSLateralCap::WriteCPACS(const TixiDocumentHandle& tixiHandle, const std::string& xpath) const
    {
        // write base
        CPACSCap::WriteCPACS(tixiHandle, xpath);

        // write element placement
        tixi::TixiCreateElementIfNotExists(tixiHandle, xpath + "/placement");
        tixi::TixiSaveElement(tixiHandle, xpath + "/placement", CPACSLateralCap_placementToString(m_placement));

    }

    const CPACSLateralCap_placement& CPACSLateralCap::GetPlacement() const
    {
        return m_placement;
    }

    void CPACSLateralCap::SetPlacement(const CPACSLateralCap_placement& value)
    {
        m_placement = value;
    }

} // namespace generated
} // namespace tigl
